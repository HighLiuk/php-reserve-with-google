<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: main.proto

namespace Generated\Rwg;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Information about an Entity that is on the partner's platform. For example,
 * an Entity could be a retail store, a hospital, an online business etc.
 *
 * Generated from protobuf message <code>Entity</code>
 */
class Entity extends \Google\Protobuf\Internal\Message
{
    /**
     * An opaque string generated by the partner that identifies an Entity.
     * Must be unique across all entities.
     * Strongly recommended to only include URL-safe characters. (required)
     *
     * Generated from protobuf field <code>string entity_id = 1;</code>
     */
    protected $entity_id = '';
    /**
     * The name of the Entity. (required)
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * The contact telephone number of the Entity including its country and area
     * codes, e.g. +14567891234. Highly recommended. (optional)
     *
     * Generated from protobuf field <code>string telephone = 3;</code>
     */
    protected $telephone = '';
    /**
     * The url of the Entity's public website. Highly recommended. (optional)
     *
     * Generated from protobuf field <code>string url = 4;</code>
     */
    protected $url = '';
    /**
     * The location of the Entity (required)
     *
     * Generated from protobuf field <code>.GeoCoordinates location = 5;</code>
     */
    protected $location = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $entity_id
     *           An opaque string generated by the partner that identifies an Entity.
     *           Must be unique across all entities.
     *           Strongly recommended to only include URL-safe characters. (required)
     *     @type string $name
     *           The name of the Entity. (required)
     *     @type string $telephone
     *           The contact telephone number of the Entity including its country and area
     *           codes, e.g. +14567891234. Highly recommended. (optional)
     *     @type string $url
     *           The url of the Entity's public website. Highly recommended. (optional)
     *     @type \Generated\Rwg\GeoCoordinates $location
     *           The location of the Entity (required)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Main::initOnce();
        parent::__construct($data);
    }

    /**
     * An opaque string generated by the partner that identifies an Entity.
     * Must be unique across all entities.
     * Strongly recommended to only include URL-safe characters. (required)
     *
     * Generated from protobuf field <code>string entity_id = 1;</code>
     * @return string
     */
    public function getEntityId()
    {
        return $this->entity_id;
    }

    /**
     * An opaque string generated by the partner that identifies an Entity.
     * Must be unique across all entities.
     * Strongly recommended to only include URL-safe characters. (required)
     *
     * Generated from protobuf field <code>string entity_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setEntityId($var)
    {
        GPBUtil::checkString($var, True);
        $this->entity_id = $var;

        return $this;
    }

    /**
     * The name of the Entity. (required)
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the Entity. (required)
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The contact telephone number of the Entity including its country and area
     * codes, e.g. +14567891234. Highly recommended. (optional)
     *
     * Generated from protobuf field <code>string telephone = 3;</code>
     * @return string
     */
    public function getTelephone()
    {
        return $this->telephone;
    }

    /**
     * The contact telephone number of the Entity including its country and area
     * codes, e.g. +14567891234. Highly recommended. (optional)
     *
     * Generated from protobuf field <code>string telephone = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTelephone($var)
    {
        GPBUtil::checkString($var, True);
        $this->telephone = $var;

        return $this;
    }

    /**
     * The url of the Entity's public website. Highly recommended. (optional)
     *
     * Generated from protobuf field <code>string url = 4;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * The url of the Entity's public website. Highly recommended. (optional)
     *
     * Generated from protobuf field <code>string url = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

    /**
     * The location of the Entity (required)
     *
     * Generated from protobuf field <code>.GeoCoordinates location = 5;</code>
     * @return \Generated\Rwg\GeoCoordinates|null
     */
    public function getLocation()
    {
        return $this->location;
    }

    public function hasLocation()
    {
        return isset($this->location);
    }

    public function clearLocation()
    {
        unset($this->location);
    }

    /**
     * The location of the Entity (required)
     *
     * Generated from protobuf field <code>.GeoCoordinates location = 5;</code>
     * @param \Generated\Rwg\GeoCoordinates $var
     * @return $this
     */
    public function setLocation($var)
    {
        GPBUtil::checkMessage($var, \Generated\Rwg\GeoCoordinates::class);
        $this->location = $var;

        return $this;
    }

}

