<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: main.proto

namespace Generated\Rwg;

use UnexpectedValueException;

/**
 * Describes how a range of values should be interpreted and displayed to the
 * user.
 *
 * Protobuf type <code>RangeInterpretation</code>
 */
class RangeInterpretation
{
    /**
     * Generated from protobuf enum <code>INTERPRETATION_UNSPECIFIED = 0;</code>
     */
    const INTERPRETATION_UNSPECIFIED = 0;
    /**
     * When range represents an exact value (such that min value equals to max)
     * Will be interpreted as a specific value.
     * Examples:
     *   $20 for a yoga class; 50 min haircut duration
     *
     * Generated from protobuf enum <code>INTERPRETATION_EXACT = 1;</code>
     */
    const INTERPRETATION_EXACT = 1;
    /**
     * When only minimum of the range is known and displayed to consumers.
     * The maximum value will be decided based on other configurations
     * (e.g., price may go up if consumer selecting add-ons)
     * Examples:
     *   $30 for dog grooming, but additional consumer choices may increase the
     *   price
     *   40 min massage, but there are also options for extending the time.
     *
     * Generated from protobuf enum <code>INTERPRETATION_STARTS_AT = 2;</code>
     */
    const INTERPRETATION_STARTS_AT = 2;
    /**
     * When the range is variable and both minimum and maximum values are known
     * and displayed to consumers.
     * Examples:
     *   $30 - $60 for dog grooming, the exact price will depend on additional
     *   consumer choices.
     *   1 - 3 hour hair color service.
     *
     * Generated from protobuf enum <code>INTERPRETATION_RANGE = 3;</code>
     */
    const INTERPRETATION_RANGE = 3;
    /**
     * When the range is variable and no min value is known. No information is
     * displayed to consumers ahead of time.
     * Examples:
     *   A consultation for a home service
     *
     * Generated from protobuf enum <code>INTERPRETATION_NOT_DISPLAYED = 4;</code>
     */
    const INTERPRETATION_NOT_DISPLAYED = 4;

    private static $valueToName = [
        self::INTERPRETATION_UNSPECIFIED => 'INTERPRETATION_UNSPECIFIED',
        self::INTERPRETATION_EXACT => 'INTERPRETATION_EXACT',
        self::INTERPRETATION_STARTS_AT => 'INTERPRETATION_STARTS_AT',
        self::INTERPRETATION_RANGE => 'INTERPRETATION_RANGE',
        self::INTERPRETATION_NOT_DISPLAYED => 'INTERPRETATION_NOT_DISPLAYED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

